{"config":{"startingPlayerChooses":false,"useOldManaRule":false,"validateCardAmounts":true,"lowerDeckLimit":30,"upperDeckLimit":50,"startingHandSize":5},"players":[{"deckList":["id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUS00258\ncardType: standardSpell\nname: CUS00258\nlevel: 2\ntypes: Illusion\n\no: cast\n$viewed = VIEW([from opponent.hand]);\nif (COUNT([from $viewed where cardType = spell]) > 0) {\n\t$exiled = EXILE([from $viewed where cardType = spell]);\n\topponent.DRAW?(COUNT($exiled));\n};","id: CUS00258\ncardType: standardSpell\nname: CUS00258\nlevel: 2\ntypes: Illusion\n\no: cast\n$viewed = VIEW([from opponent.hand]);\nif (COUNT([from $viewed where cardType = spell]) > 0) {\n\t$exiled = EXILE([from $viewed where cardType = spell]);\n\topponent.DRAW?(COUNT($exiled));\n};","id: CUS00258\ncardType: standardSpell\nname: CUS00258\nlevel: 2\ntypes: Illusion\n\no: cast\n$viewed = VIEW([from opponent.hand]);\nif (COUNT([from $viewed where cardType = spell]) > 0) {\n\t$exiled = EXILE([from $viewed where cardType = spell]);\n\topponent.DRAW?(COUNT($exiled));\n};","id: CUS00250\ncardType: standardSpell\nname: CUS00250\nlevel: 0\ntypes: Light, Angel\n\no: cast\nMOVE(SELECT([3, 4, 5], [from you.discard where name = CUS00071 | (types = Light & cardType = unit)]), baseOwner.deck);\nDRAW(1);\nif (COUNT([from you.field where types = Angel & cardType = unit]) > 0) {\n\tDRAW(1);\n};\n\no: trigger\nmandatory: no\nafter: discarded(from: deck) = thisCard\ncost:\nLOSELIFE(100);\nexec:\nMOVE([from discard where self = thisCard], baseOwner.deckTop);","id: CUS00250\ncardType: standardSpell\nname: CUS00250\nlevel: 0\ntypes: Light, Angel\n\no: cast\nMOVE(SELECT([3, 4, 5], [from you.discard where name = CUS00071 | (types = Light & cardType = unit)]), baseOwner.deck);\nDRAW(1);\nif (COUNT([from you.field where types = Angel & cardType = unit]) > 0) {\n\tDRAW(1);\n};\n\no: trigger\nmandatory: no\nafter: discarded(from: deck) = thisCard\ncost:\nLOSELIFE(100);\nexec:\nMOVE([from discard where self = thisCard], baseOwner.deckTop);","id: CUS00250\ncardType: standardSpell\nname: CUS00250\nlevel: 0\ntypes: Light, Angel\n\no: cast\nMOVE(SELECT([3, 4, 5], [from you.discard where name = CUS00071 | (types = Light & cardType = unit)]), baseOwner.deck);\nDRAW(1);\nif (COUNT([from you.field where types = Angel & cardType = unit]) > 0) {\n\tDRAW(1);\n};\n\no: trigger\nmandatory: no\nafter: discarded(from: deck) = thisCard\ncost:\nLOSELIFE(100);\nexec:\nMOVE([from discard where self = thisCard], baseOwner.deckTop);","id: CUS00220\ncardType: standardSpell\nname: CUS00220\nlevel: 0\ntypes:\n\no: cast\nDESTROY(SELECT(1, [from you.field where level = 0]));\nDRAW(1);","id: CUS00220\ncardType: standardSpell\nname: CUS00220\nlevel: 0\ntypes:\n\no: cast\nDESTROY(SELECT(1, [from you.field where level = 0]));\nDRAW(1);","id: CUS00220\ncardType: standardSpell\nname: CUS00220\nlevel: 0\ntypes:\n\no: cast\nDESTROY(SELECT(1, [from you.field where level = 0]));\nDRAW(1);","id: CUS00058\r\ncardType: standardSpell\r\nname: CUS00058\r\nlevel: 0\r\ntypes:\r\n\r\no: cast\r\ncost:\r\n$unit = SELECT(1, [from field where cardType = unit & level < you.partner.level]);\r\nexec:\r\nDISCARD(SELECT(1, [from you.hand]));\r\nAPPLY([from $unit where cardType = unit], {cancelAbilities}, currentTurn.end);","id: CUS00058\r\ncardType: standardSpell\r\nname: CUS00058\r\nlevel: 0\r\ntypes:\r\n\r\no: cast\r\ncost:\r\n$unit = SELECT(1, [from field where cardType = unit & level < you.partner.level]);\r\nexec:\r\nDISCARD(SELECT(1, [from you.hand]));\r\nAPPLY([from $unit where cardType = unit], {cancelAbilities}, currentTurn.end);","id: CUS00058\r\ncardType: standardSpell\r\nname: CUS00058\r\nlevel: 0\r\ntypes:\r\n\r\no: cast\r\ncost:\r\n$unit = SELECT(1, [from field where cardType = unit & level < you.partner.level]);\r\nexec:\r\nDISCARD(SELECT(1, [from you.hand]));\r\nAPPLY([from $unit where cardType = unit], {cancelAbilities}, currentTurn.end);","id: CUS00001\ncardType: standardSpell\nname: CUS00001\nlevel: 0\ntypes: Fire\n\no: cast\nDISCARD?(DECKTOP?(opponent, 2));","id: CUS00001\ncardType: standardSpell\nname: CUS00001\nlevel: 0\ntypes: Fire\n\no: cast\nDISCARD?(DECKTOP?(opponent, 2));","id: CUS00001\ncardType: standardSpell\nname: CUS00001\nlevel: 0\ntypes: Fire\n\no: cast\nDISCARD?(DECKTOP?(opponent, 2));"],"partnerIndex":0},{"deckList":["id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUU00126\ncardType: unit\nname: CUU00126\nlevel: 1\ntypes: Water\nattack: 100\ndefense: 0\ndeckLimit: any\n\no: trigger\nmandatory: yes\nafter: discarded = thisCard\nGAINLIFE(50);","id: CUS00258\ncardType: standardSpell\nname: CUS00258\nlevel: 2\ntypes: Illusion\n\no: cast\n$viewed = VIEW([from opponent.hand]);\nif (COUNT([from $viewed where cardType = spell]) > 0) {\n\t$exiled = EXILE([from $viewed where cardType = spell]);\n\topponent.DRAW?(COUNT($exiled));\n};","id: CUS00258\ncardType: standardSpell\nname: CUS00258\nlevel: 2\ntypes: Illusion\n\no: cast\n$viewed = VIEW([from opponent.hand]);\nif (COUNT([from $viewed where cardType = spell]) > 0) {\n\t$exiled = EXILE([from $viewed where cardType = spell]);\n\topponent.DRAW?(COUNT($exiled));\n};","id: CUS00258\ncardType: standardSpell\nname: CUS00258\nlevel: 2\ntypes: Illusion\n\no: cast\n$viewed = VIEW([from opponent.hand]);\nif (COUNT([from $viewed where cardType = spell]) > 0) {\n\t$exiled = EXILE([from $viewed where cardType = spell]);\n\topponent.DRAW?(COUNT($exiled));\n};","id: CUS00250\ncardType: standardSpell\nname: CUS00250\nlevel: 0\ntypes: Light, Angel\n\no: cast\nMOVE(SELECT([3, 4, 5], [from you.discard where name = CUS00071 | (types = Light & cardType = unit)]), baseOwner.deck);\nDRAW(1);\nif (COUNT([from you.field where types = Angel & cardType = unit]) > 0) {\n\tDRAW(1);\n};\n\no: trigger\nmandatory: no\nafter: discarded(from: deck) = thisCard\ncost:\nLOSELIFE(100);\nexec:\nMOVE([from discard where self = thisCard], baseOwner.deckTop);","id: CUS00250\ncardType: standardSpell\nname: CUS00250\nlevel: 0\ntypes: Light, Angel\n\no: cast\nMOVE(SELECT([3, 4, 5], [from you.discard where name = CUS00071 | (types = Light & cardType = unit)]), baseOwner.deck);\nDRAW(1);\nif (COUNT([from you.field where types = Angel & cardType = unit]) > 0) {\n\tDRAW(1);\n};\n\no: trigger\nmandatory: no\nafter: discarded(from: deck) = thisCard\ncost:\nLOSELIFE(100);\nexec:\nMOVE([from discard where self = thisCard], baseOwner.deckTop);","id: CUS00250\ncardType: standardSpell\nname: CUS00250\nlevel: 0\ntypes: Light, Angel\n\no: cast\nMOVE(SELECT([3, 4, 5], [from you.discard where name = CUS00071 | (types = Light & cardType = unit)]), baseOwner.deck);\nDRAW(1);\nif (COUNT([from you.field where types = Angel & cardType = unit]) > 0) {\n\tDRAW(1);\n};\n\no: trigger\nmandatory: no\nafter: discarded(from: deck) = thisCard\ncost:\nLOSELIFE(100);\nexec:\nMOVE([from discard where self = thisCard], baseOwner.deckTop);","id: CUS00220\ncardType: standardSpell\nname: CUS00220\nlevel: 0\ntypes:\n\no: cast\nDESTROY(SELECT(1, [from you.field where level = 0]));\nDRAW(1);","id: CUS00220\ncardType: standardSpell\nname: CUS00220\nlevel: 0\ntypes:\n\no: cast\nDESTROY(SELECT(1, [from you.field where level = 0]));\nDRAW(1);","id: CUS00220\ncardType: standardSpell\nname: CUS00220\nlevel: 0\ntypes:\n\no: cast\nDESTROY(SELECT(1, [from you.field where level = 0]));\nDRAW(1);","id: CUS00058\r\ncardType: standardSpell\r\nname: CUS00058\r\nlevel: 0\r\ntypes:\r\n\r\no: cast\r\ncost:\r\n$unit = SELECT(1, [from field where cardType = unit & level < you.partner.level]);\r\nexec:\r\nDISCARD(SELECT(1, [from you.hand]));\r\nAPPLY([from $unit where cardType = unit], {cancelAbilities}, currentTurn.end);","id: CUS00058\r\ncardType: standardSpell\r\nname: CUS00058\r\nlevel: 0\r\ntypes:\r\n\r\no: cast\r\ncost:\r\n$unit = SELECT(1, [from field where cardType = unit & level < you.partner.level]);\r\nexec:\r\nDISCARD(SELECT(1, [from you.hand]));\r\nAPPLY([from $unit where cardType = unit], {cancelAbilities}, currentTurn.end);","id: CUS00058\r\ncardType: standardSpell\r\nname: CUS00058\r\nlevel: 0\r\ntypes:\r\n\r\no: cast\r\ncost:\r\n$unit = SELECT(1, [from field where cardType = unit & level < you.partner.level]);\r\nexec:\r\nDISCARD(SELECT(1, [from you.hand]));\r\nAPPLY([from $unit where cardType = unit], {cancelAbilities}, currentTurn.end);","id: CUS00001\ncardType: standardSpell\nname: CUS00001\nlevel: 0\ntypes: Fire\n\no: cast\nDISCARD?(DECKTOP?(opponent, 2));","id: CUS00001\ncardType: standardSpell\nname: CUS00001\nlevel: 0\ntypes: Fire\n\no: cast\nDISCARD?(DECKTOP?(opponent, 2));","id: CUS00001\ncardType: standardSpell\nname: CUS00001\nlevel: 0\ntypes: Fire\n\no: cast\nDISCARD?(DECKTOP?(opponent, 2));"],"partnerIndex":0}],"inputLog":[{"type":"pass"},{"type":"pass"},{"type":"castSpell","value":1},{"type":"chooseZoneSlot","value":1},{"type":"pass"},{"type":"pass"},{"type":"pass"},{"type":"pass"}],"rngLog":[1,[5,16,8,6,13,11,14,11,0,13,14,12,10,1,13,12,10,2,9,4,1,0,5,1,2,2,0,0],[2,24,5,18,0,7,21,17,3,15,9,14,7,4,3,8,0,2,0,7,1,1,3,0,2,1,0,0]],"extra":{}}